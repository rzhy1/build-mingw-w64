name: Build MinGW-w64 Toolchain

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"

jobs:
  build:
    runs-on: ubuntu-24.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
        
    - name: Set up dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y g++ flex bison git m4 bzip2 curl make cmake diffutils ninja-build
    
    - name: buildcache
      run: |
        wget -O- https://gitlab.com/bits-n-bites/buildcache/-/archive/v0.31.2/buildcache-v0.31.2.tar.gz | tar xz
        cd buildcache-*
        mkdir build
        cd build
        cmake ..
        make -j$(nproc)
        sudo make install
        buildcache --version
        
    - name: Set up buildcache
      run: |
        mkdir -p $HOME/.buildcache
        chmod -R 777 $HOME/.buildcache
        export PATH="/usr/bin/buildcache:$PATH"
        buildcache --config set storage_local $HOME/.buildcache
        buildcache --config set max_size 10G
        
    - name: Cache build dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.buildcache
          ${{ github.workspace }}/mingw-w64/x86_64
        key: ${{ runner.os }}-mingw-w64-${{ hashFiles('**/Makefile', '**/*.c', '**/*.cpp', '**/*.h', '**/*.sh') }}


    - name: Run build script
      env:
        ROOT_PATH: ${{ github.workspace }}/mingw-w64
        CC: "buildcache gcc"
        CXX: "buildcache g++"
      run: |
        chmod +x ./build_mingw_w64.sh
        ROOT_PATH=${{ github.workspace }}/mingw-w64 ./build_mingw_w64.sh  --keep-artifacts  x86_64
    
    - name: zip
      if: success()
      run: |
        cd ${{ github.workspace }}/mingw-w64/x86_64
        zip -r mingw-w64-x86_64-toolchain.zip *

    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        tag: mingw-w64
        allowUpdates: true
        artifacts: "${{ github.workspace }}/mingw-w64/x86_64/mingw-w64-x86_64-toolchain.zip"
        token: ${{ secrets.GITHUB_TOKEN }}
    - name: Show ccache stats
      run: ccache -s -v
